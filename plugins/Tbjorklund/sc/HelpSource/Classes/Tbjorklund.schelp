class:: Tbjorklund
summary:: Euclidean rhythms in audio and control rate
categories:: UGens>f0plugins
related:: Classes/Bjorklund, Classes/Pbjorklund, Classes/Dbjorklund


DESCRIPTION::
After an algorithm by E. Bjorklund. See paper by Godfried Toussaint.

As audio and control rate signals. Can be used as triggers or as a strange pulse train.


CLASSMETHODS::

METHOD:: ar, kr

ARGUMENT:: rate
Time per tick. Multiply this with CODE::n:: to set playback rate of the complete phrase.

ARGUMENT:: width
Pulse width ratio from zero to one. 1.0 makes 'legato'.

ARGUMENT:: k
The number of 'hits'.

ARGUMENT:: n
The total array size.

ARGUMENT:: offset
Starting index.


EXAMPLES::

CODE::
s.boot;
{SinOsc.ar*Tbjorklund.ar(8, 0.5, 3, 8)*0.1!2}.play;  //tresillio
{SinOsc.ar*Tbjorklund.ar(8, 0.5, 5, 8)*0.1!2}.play;  //cinquillo
{SinOsc.ar*Tbjorklund.ar(8, 0.5, 9, 16)*0.1!2}.play;  //rumba

//multichannel expansion
{SinOsc.ar([400, 500])*Tbjorklund.ar(8, 1, 3, 8, [0, 1])*0.1}.play;

//modulating the offset
{SinOsc.ar([400, 500])*Tbjorklund.ar(16, 0.5, 9, 16, [0, Line.kr(0, 16, 60).floor.poll])*0.1}.play;

//as strange square waves
{Tbjorklund.ar(MouseX.kr(20, 2000, 1), 0.5, MouseY.kr(0, 16).round.poll, 16)*0.1!2}.play;
{Tbjorklund.ar(MouseX.kr(-1000, 1000), MouseY.kr(0, 1), SinOsc.kr(0.1).range(1, 15), 16)*0.1!2}.play;

//used as triggers for envelopes
(
{
	var t1= Tbjorklund.ar(8, 0.5, 5, 8);
	var t2= Tbjorklund.ar(8, 0.5, 3, 8, 4);  //offset
	var t3= Tbjorklund.ar(4, 0.5, 9, 16);
	([
		EnvGen.ar(Env.perc(0.001, 0.1), t1)*SinOsc.ar(500, 0, 0.4),
		EnvGen.ar(Env.perc(0.001, 0.2), t2)*SinOscFB.ar(300, LFNoise2.kr(0.4).abs, 0.3),
		EnvGen.ar(Env.perc(0.001, 0.4), t3)*VarSaw.ar(100, 0, 0.2, 0.2)
	]).sum.dup;
}.play;
)
::
